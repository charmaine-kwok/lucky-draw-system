// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/draw/{customerId}": {
            "get": {
                "description": "Enter draw",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Enter draw",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prize",
                        "schema": {
                            "$ref": "#/definitions/controllers.prizeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid customer id",
                        "schema": {
                            "$ref": "#/definitions/controllers.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/controllers.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.errorResponse"
                        }
                    }
                }
            }
        },
        "/redeem/{customerId}": {
            "post": {
                "description": "Redeem prize",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Redeem prize",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mobile",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Mobile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mobile",
                        "schema": {
                            "$ref": "#/definitions/models.Mobile"
                        }
                    },
                    "400": {
                        "description": "Invalid customer id",
                        "schema": {
                            "$ref": "#/definitions/controllers.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Some error message..."
                }
            }
        },
        "controllers.prizeResponse": {
            "type": "object",
            "properties": {
                "prize": {
                    "type": "string",
                    "example": "Congratulations! You have won Buy 1 Get 1 Free Coupon!"
                }
            }
        },
        "models.Mobile": {
            "type": "object",
            "required": [
                "mobile"
            ],
            "properties": {
                "mobile": {
                    "type": "string",
                    "example": "98765432"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Lucky Draw System Api",
	Description:      "A lucky draw system api.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
